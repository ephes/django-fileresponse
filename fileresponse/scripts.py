# AUTOGENERATED! DO NOT EDIT! File to edit: nbs/01_scripts.ipynb (unless otherwise specified).

__all__ = ['patch_config', 'patch_lib_name', 'nbdev_build_docs_patched']

# Cell

from pathlib import Path
from configparser import ConfigParser


def patch_config(settings_path, lib_name):
    config = ConfigParser()
    config.read(settings_path)
    config["DEFAULT"]["lib_name"] = lib_name
    with settings_path.open("w") as settings_file:
        config.write(settings_file)
    return config

# Cell

from contextlib import contextmanager


@contextmanager
def patch_lib_name(settings_path, lib_name):
    config = ConfigParser()
    config.read(settings_path)
    original_lib_name = config["DEFAULT"]["lib_name"]
    config = patch_config(settings_path, lib_name)
    try:
        yield config
    finally:
        patch_config(settings_path, original_lib_name)

# Cell

import re
import sys

from pathlib import Path
from contextlib import contextmanager

from nbdev.export2html import nbdev_build_docs


def nbdev_build_docs_patched():
    cwd = Path.cwd()
    settings_path = cwd / "settings.ini"
    with patch_lib_name(settings_path, "fileresponse"):
        sys.argv[0] = re.sub(r"(-script\.pyw|\.exe)?$", "", sys.argv[0])
        sys.exit(nbdev_build_docs())